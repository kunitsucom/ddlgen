package main

type (
	// User is a user.
	//
	// spanddl:      table: `Users`
	// spanddl:     option: PRIMARY KEY (`Id`)
	// spanddl: constraint: CONSTRAINT AgeGTEZero CHECK(Age >= 0)
	// spanddl:      index: CREATE INDEX `IndexUsersByName` ON Users(`Name`)
	User struct {
		// ID is a user ID.
		ID string    `dbtest:"Id"    spanddl:"STRING(36)  NOT NULL"`
		// Name is a user name.
		Name string  `dbtest:"Name"  spanddl:"STRING(255) NOT NULL"`
		// Email is a user email.
		Email string `dbtest:"Email" spanddl:"STRING(255) NOT NULL"`
		// Age is a user age.
		Age int      `dbtest:"Age"   spanddl:"INT64       NOT NULL"`
		// Ignore is a ignore field.
		Ignore string `dbtest:"-"    spanddl:"-"`
	}

	// Book is a book.
	//
	// spanddl:table:`Books`
	// spanddl:options:PRIMARY KEY (`Id`)
	Book struct {
		// ID is a book ID.
		ID string     `spanddl:"STRING(36)  NOT NULL"`
		// Title is a book title.
		Title string  `spanddl:"STRING(255) NOT NULL"`
		// Author is a book author.
		Author string `spanddl:"STRING(255) NOT NULL"`
	}

	// Author is a author.
	// spanddl:
	Author struct {
		// ID is a author ID.
		ID string   `dbtest:"Id"     spanddl:"STRING(36)  NOT NULL"`
		// Name is a author name.
		Name string `dbtest:"Name"   spanddl:"STRING(255) NOT NULL"`
	}

	// Store
	// spanddl: table: CREATE TABLE `Stores`
	Store struct {
		// ID is a store ID.
		ID string   `dbtest:"Id"`
		// Name is a store name.
		Name string `dbtest:"Name"`
	}
)

// spanddl: index: CREATE INDEX `IndexBooksByTitle` ON Books(`Title`)
